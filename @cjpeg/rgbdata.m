function [r,g,b]=rgbdata(c,nr)% CJPEG/RGBDATA - Geeft RGB-data van jpeg%    rgb=rgbdata(c[,nr]) - nr=scannummer%    [r,g,b]=rgbdata(c[,nr]);%    rgb=rgbdata(c,A) : met A resultaat van leesscanif ~exist('nr','var')	A=leesscan(c);elseif iscell(nr)	A=nr;else	A=leesscan(c,nr);endif isempty(A)	error('Lege scan??');endif length(A)==1	r=A{1};	fprintf('!!!Geen RGB-data maar gray-scale!!!\n')	returnelseif length(A)~=3	error('Een verkeerd aantal kleuren voor RGB-conversie')ends1=size(A{1});A{2}=Vergroot(A{2},s1);A{3}=Vergroot(A{3},s1);R = uint8(max(0,min(255,double(A{1})                               + 1.402   *(double(A{3})-128))));G = uint8(max(0,min(255,double(double(A{1}) - 0.34414 *(double(A{2})-128) - 0.71414 *(double(A{3})-128)))));B = uint8(max(0,min(255,double(double(A{1}) + 1.772   *(double(A{2})-128)))));if nargout==1	r=uint8(zeros(s1(1),s1(2),3));	r(:,:,1)=R;	r(:,:,2)=G;	r(:,:,3)=B;else	r=R;	g=G;	b=B;endfunction A=Vergroot(A,s1)s2=size(A);if s1(1)<s2(1)	error('!!!Dit was onverwacht : size(Y)<size(Cx)!!!')elseif s1(1)>s2(1)	if rem(s1(1),s2(1))		error('!!!Dit is (nog) niet voorzien : een niet geheel veelvoud van size(Y)<-->size(Cx)!!')	end	i=1:s2(1);	i=i(ones(s1(1)/s2(1),1),:);	A=A(i(:),:);endif s1(2)<s2(2)	error('!!!Dit was onverwacht : size(Y)<size(Cx)!!!')elseif s1(2)>s2(2)	if rem(s1(2),s2(2))		error('!!!Dit is (nog) niet voorzien : een niet geheel veelvoud van size(Y)<-->size(Cx)!!')	end	i=1:s2(2);	i=i(ones(s1(2)/s2(2),1),:);	A=A(:,i(:));end