function jd=calcjd(d,m0,j0,varargin)% CALCJD - Berekent Julian day%   ref Astronomical Algorithms - J. Meeuws - chap. 7%     jd=calcjd(d,m0,j0[,h,m,s])%     jd=calcjd(JC)if nargin<=1	if nargin==0		d=getutctime();	end	if size(d,2)==1	% julian century		if all(d>100000&&d<900000)	% matlab time			jd=d+1721058.5-1/24;		elseif all(d<1)			jd=d*36525+2451545;		elseif all(d>1e6&d<4e6)			jd=d;		else			error('Unknown input')		end		return	end	j0=d(:,3);	m0=d(:,2);	if size(d,2)>3		mn=0;		s=0;		h=d(:,4);		if size(d,2)>4			mn=d(:,5);			if size(d,2)>5				s=d(:,6);			end		end		doff=(h+(mn+s/60)/60)/24;	else		doff=0;	end	d=d(:,1)+doff;endif nargin>3	if length(nargin)>6		error('Teveel inputs')	end	f=[1 1/60 1/3600]/24;	d=d+f(1:length(varargin))*cat(1,varargin{:});endj=j0;m=m0;janfeb=m<=2;m(janfeb)=m(janfeb)+12;j(janfeb)=j(janfeb)-1;if any(j0<1582|(j0==1582&(m0<10|(m0==10&d<=4))))	% Julian day	b=0;	if length(j0)>1		warning('!!!!niet voorzien voor meerdere vroege data!!!')	endelse	a=floor(j/100);	b=2-a+floor(a/4);endjd=floor(365.25*(j+4716))+floor(30.6001*(m+1))+d+b-1524.5;