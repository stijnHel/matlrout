function test=minmax(A)% bezier/minmax - bepaalt extremen van bezierkurveif length(A.pt_lijst)==4	p=[-1 3 -3 1;3 -6 3 0;-3 3 0 0;1 0 0 0]*A.pt_lijst;	dpdt=[-3 9 -9 3;6 -12 6 0;-3 3 0 0]*A.pt_lijst;	%d2pdt2=[-6 18 -18 6;6 -12 6 0]*A.pt_lijst;	extr=[min(A.pt_lijst([1 4],:));max(A.pt_lijst([1 4],:))];	for i=1:2		if dpdt(1,i)~=0	% cubisch			D=dpdt(2,i)^2-4*dpdt(1,i)*dpdt(3,i);			if D>0				t=(-dpdt(2,i)+sqrt(D))/2/dpdt(1,i);				if (t>0)&(t<1)					mx=polyval(p(:,i),t);					if mx<extr(1,i)						extr(1,i)=mx;					elseif mx>extr(2,i)						extr(2,i)=mx;					end				end				t=(-dpdt(2,i)-sqrt(D))/2/dpdt(1,i);				if (t>0)&(t<1)					mx=polyval(p(:,i),t);					if mx<extr(1,i)						extr(1,i)=mx;					elseif mx>extr(2,i)						extr(2,i)=mx;					end				end			elseif D==0				t=(-dpdt(2,i)+sqrt(D))/2/dpdt(1,i);				if (t>0)&(t<1)					mx=polyval(p(:,i),t);					if mx<extr(1,i)						extr(1,i)=mx;					elseif mx>extr(2,i)						extr(2,i)=mx;					end				end			end	% D<0		elseif dpdt(2,i)~=0			t=-dpdt(3,i)/dpdt(2,i);			if (t>0)&(t<1)				mx=polyval(p(:,i),t);				if mx<extr(1,i)					extr(1,i)=mx;				elseif mx>extr(2,i)					extr(2,i)=mx;				end			end		end	end	% for i=1:2else	error('Deze routine is enkel nog maar voorzien voor kubische bezier-kurves')endtest=extr;