function L=maaklens(typ,varargin)%MAAKLENS - Maakt een lens%    L=maaklens(typ,...)%  types :%     'sferisch': lens bestaande uit twee bolvormige of vlakke oppervlakken%          en evenuteel een cylindrische buitenrand%            D,f[,d[,nlens]] of D,r1,r2,d,nlens%     'prisma'%            grondvlak, ribbe[, nlens]%     'bol'%            r[, nlens]%%  default brekingsindex : 1.515 (BK7)Ndefault=1.515;switch typcase 'sferisch'	switch length(varargin)	case 1		lens=varargin{1};		switch length(lens)		case {2,3,4}			D=lens(1);			f=lens(2);			if length(lens)>2				d=lens(3);			else				d=0;			end			if length(lens)>3				nlens=lens(4);			else				nlens=Ndefault;			end			r1=2*f*(nlens-1);			r2=r1;		case 5			D=lens(1);			r1=lens(2);			r2=lens(3);			d=lens(4);			nlens=lens(5);			f=1/(1/r1+1/r2)/(nlens-1);		otherwise			error('Verkeerde specificatie van een normale lens')		end	case {2,3,4}		D=varargin{1};		f=varargin{2};		if length(varargin)>3			d=varargin(3);		else			d=0;		end		if length(varargin)>3			nlens=varargin{4};		else			nlens=Ndefault;		end		r1=2*f*(nlens-1);		r2=r1;	case 5		D=varargin{1};		r1=varargin{2};		r2=varargin{3};		d=varargin{4};		nlens=varargin{5};		if isinf(r1)&isinf(r2)			f=inf;		else			f=1/(1/r1+1/r2)/(nlens-1);		end	otherwise		error('Verkeerde specificatie van een normale lens')	end	L=struct('type','sferisch','D',D,'r1',r1,'r2',r2,'d',d,'n',nlens,'f',f);case 'prisma'	if length(varargin)~=3		error('Verkeerde specificatie van een prisma')	end	grondvlak=varargin{1};	if size(grondvlak,2)<3		error('Minimaal 3 punten opgeven als grondvlak')	end	if size(grondvlak,1)==2		grondvlak(3,1)=0;	% maak 3D, grondvlak in XY-vlak	elseif size(grondvlak,2)>3		% kontrole		norm=cross(grondvlak(:,2)-grondvlak(:,1),grondvlak(:,3)-grondvlak(:,2))';		lim=max(abs(norm(:)))*1e-10;		a=norm*grondvlak(:,1);		for i=4:size(grondvlak,2)			if abs(norm*grondvlak(:,i)-a)>lim				warning('Niet alle punten van grondvlak in zelfde vlak, mogelijk lopen sommige routines fout!')			end		end	end	ribbe=varargin{2};	if length(varargin)>2		nlens=varargin{3};	else		nlens=Ndefault;	end	if length(ribbe)==1 % lengte, ribben loodrecht op eerste twee ribben van grondvlak		norm=cross(grondvlak(:,2)-grondvlak(:,1),grondvlak(:,3)-grondvlak(:,2));		norm=norm/sqrt(norm'*norm);		ribbe=ribbe*norm;	elseif isequal(size(ribbe),[1 3])		ribbe=ribbe';	elseif size(ribbe,2)~=1&size(ribbe,2)~=size(grondvlak,2)		error('Verkeerde specificatie van de ribbe van een prisma')	end	L=struct('type','prisma','grondvlak',grondvlak,'ribbe',ribbe,'n',nlens);case 'bol'	if length(varargin)>1		nlens=varargin{2};	else		nlens=Ndefault;	end	L=struct('type','bol','r',varargin{1},'n',nlens);otherwise	error('Onbekend type lens')end