function [pos,H]=geogcoor(in,varargin)% GEOGCOOR - Geeft geografische coordinaten weer%    [pos,H]=geogcoor(in)%   met geogcoor lijst%      wordt de volledige beschikbare lijst gegeven (voorlopig beperkt!)persistent GEOGcoordatapersistent BELGIUM WORLD	% replace "BELGIUM" by Contries with name as an extra field!bDegrees=false;if isempty(GEOGcoordata)	GEOGcoordata={'Ukkel',[4,21,29.20,50,47,72],104.9;	... gr,'," OL,gr,',",NB,hoogte		'Alken-Helsen',[5 16 18 50 51 45],51;	...		'Kessel-Lo-Helsen',[4 45 30 50 53 5],50;		'Boston',[74 05 0 42 20 0],0;		'La-Palma-Roque-de-los-Muchachos',[-17 -53 0 28 46 0],2500;	...	28°46?N 17°53?W? / wikipedia		'Viljandi_Estonia',[25 35 0 58 21 0],0;		'station-berchem',[4.43101 51.20011],0;		'ACA-Wilrijk',[4.38569 51.14915],0;		'station-Hasselt',[5.32613 50.92993],0;		'Heggy-Tanyak',[16.339604 46.993013],0;		'Heverlee',[4.680158 50.860432],24;		'Pyr_Bie',[1.3 42.8],620;		'Alnarp',[13 5 0 55 39 0],0;		'Arvidsjaur',[19 11 0 65 36 0],0;		'Arjeplog',[17 53 0 66 3 0 ],0;		'Copenhagen',[12.5658,55.6772],0;		'Utsjoki',[27 1 0,69  54 0],0;		'Salacgriva',[24.379569984574306,57.769323482857985],0;	... Letland		'Juupajoki',[24.361840 61.800633],0;	... Finland		'Trondheim',[10.3117814,64.3718884],0;	... Noorwegen		};	coor=zeros(size(GEOGcoordata,1),2);	for i=1:size(GEOGcoordata,1)		c1=GEOGcoordata{i,2};		if length(c1)==6			c1=c1*[1 1/60 1/3600 0 0 0;0 0 0 1 1/60 1/3600]'*pi/180;		elseif length(c1)==2			c1=c1*(pi/180);		else			error('Wrong input')		end		coor(i,:)=c1;	end	ccoor=num2cell(coor,2);	[GEOGcoordata{:,2}]=deal(ccoor{:});endif nargin==0	pos=GEOGcoordata(:,1);	returnelseif ~isempty(varargin)	setoptions({'bDegrees'},varargin{:})endif isnumeric(in)	if size(in,1)==1&&size(in,2)==2		in=in';	end	if size(in,1)~=2||size(in,2)<1||size(in,2)>3		error('Wrong input!')	end	if size(in,2)<2		in(1,2)=0;	end	pos=[deg2rad(in(1,:)),deg2rad(in(2,:))];	% deg2rad overruled by Matlab	H=0;else	if strcmpi(in,'lijst')		if nargout			pos=GEOGcoordata;		else			for i=1:size(GEOGcoordata,1)		%		fprintf('%-20s : %2d¡%02d''%05.2f" ; OL %2d¡%02d''%05.2f" NB ; %g m\n'	...		%			,GEOGcoordata{i,1:3});				fprintf('%-20s : %8.5f ¡ ; OL %8.5f" NB ; %g m\n'	...					,GEOGcoordata{i,1},GEOGcoordata{i,2}*180/pi,GEOGcoordata{i,3});			end		end		return	end	i=strmatch(lower(in),lower(GEOGcoordata(:,1)));	if length(i)>1		i=strmatch(lower(in),lower(GEOGcoordata(:,1)),'exact');		if length(i)~=1			i=strmatch(in,GEOGcoordata(:,1));			if length(i)>1				i=strmatch(in,GEOGcoordata(:,1),'exact');			end		end	end	if isempty(i)		if any(in==':')			P = regexp(in,':','split');			if any(strcmpi(P{1},{'Belgium','Belgie'}))				if isempty(BELGIUM)					Xbel = ReadESRI('C:\Users\stijn.helsen\Documents\temp\gps\borders\BEL_adm\BEL_adm4');						%!!!!!!!!!!!!!!move borders!!!!					[Z,~,Nc]=ReadESRI(Xbel,'getCoor','all');					Pp = zeros(length(Z),2);					for i=1:length(Z)						Zi = Z{i};						if iscell(Zi)							Zi = cat(1,Zi{:});						end						Pp(i,:) = mean(Zi(~isnan(Zi(:,1)),:),1);					end					BELGIUM = struct('Names',{Nc},'Coor',Pp);				end				B = strcmpi(BELGIUM.Names,P{2});				if any(B)					i = size(GEOGcoordata,1)+1;					GEOGcoordata{i,1} = ['Belgium:',BELGIUM.Names{B}];					GEOGcoordata{i,2} = BELGIUM.Coor(B,:)*pi/180;					GEOGcoordata{i,3} = 0;				end			else				error('Currently only belgium coordinates are implemented!')			end		else			if isempty(WORLD)				WORLD = ReadWorld();			end			[pos,name] = ReadWorld(WORLD,in,'pos');			i = size(GEOGcoordata,1)+1;			GEOGcoordata{i,1} = name;			GEOGcoordata{i,2} = pos*pi/180;			GEOGcoordata{i,3} = 0;		end		if isempty(i)			error('coordinaten niet gevonden')		end	elseif length(i)>1		printstr(GEOGcoordata(i,1));		error('Meerdere mogelijkheden voor geografische posities')	end	pos=GEOGcoordata{i,2};	H=GEOGcoordata{i,3};endif bDegrees	pos=pos*(180/pi);end