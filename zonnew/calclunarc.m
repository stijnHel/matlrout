function [longout,lat,D]=calclunarc(dmj,calcD)% CALCLUNARC - Berekent lunar coordinates%   [longout,lat,D]=calclunarc(dmj[,calcD])%      met dmj ofwel [d,m,j[,hr,min,sec]] of in JD of JC%%  !!!!!calcD - niet correct !!!!!%            long, lat: d/dt (met dt=1 JC) --- en met vereenvoudiging%            D: helemaal fout%%   Afstanden in [km]%   Bij bepaling van afgeleiden - per eeuw berekend.%%   ref Astronomical Algorithms - J. Meeuws - chap. 47global MOONlong MOONlatif isempty(MOONlong)	MOONlong=[	...		0  0  1  0  6288774  -20905355		2  0 -1  0  1274027   -3699111		2  0  0  0   658314   -2955968		0  0  2  0   213618    -569925		0  1  0  0  -185116      48888		0  0  0  2  -114332      -3149		2  0 -2  0    58793     246158		2 -1 -1  0    57066    -152138		2  0  1  0    53322    -170733		2 -1  0  0    45758    -204586		0  1 -1  0   -40923    -129620		1  0  0  0   -34720     108743		0  1  1  0   -30383     104755		2  0  0 -2    15327      10321		0  0  1  2   -12528          0		0  0  1 -2    10980      79661		4  0 -1  0    10675     -34782		0  0  3  0    10034     -23210		4  0 -2  0     8548     -21636		2  1 -1  0    -7888      24208		2  1  0  0    -6766      30824		1  0 -1  0    -5163      -8379		1  1  0  0     4987     -16675		2 -1  1  0     4036     -12831		2  0  2  0     3994     -10445		4  0  0  0     3861     -11650		2  0 -3  0     3665      14403		0  1 -2  0    -2689      -7003		2  0 -1  2    -2602          0		2 -1 -2  0     2390      10056		1  0  1  0    -2348       6322		2 -2  0  0     2236      -9884		0  1  2  0    -2120       5751		0  2  0  0    -2069          0		2 -2 -1  0     2048      -4950		2  0  1 -2    -1773       4130		2  0  0  2    -1595          0		4 -1 -1  0     1215      -3958		0  0  2  2    -1110          0		3  0 -1  0     -892       3258		2  1  1  0     -810       2616		4 -1 -2  0      759      -1897		0  2 -1  0     -713      -2117		2  2 -1  0     -700       2354		2  1 -2  0      691          0		2 -1  0 -2      596          0		4  0  1  0      549      -1423		0  0  4  0      537      -1117		4 -1  0  0      520      -1571		1  0 -2  0     -487      -1739		2  1  0 -2     -399          0		0  0  2 -2     -381      -4421		1  1  1  0      351          0		3  0 -2  0     -340          0		4  0 -3  0      330          0		2 -1  2  0      327          0		0  2  1  0     -323       1165		1  1 -1  0      299          0		2  0  3  0      294          0		2  0 -1 -2        0       8752		];	MOONlat=[	...		0  0  0  1 5128122		0  0  1  1  280602		0  0  1 -1  277693		2  0  0 -1  173237		2  0 -1  1   55413		2  0 -1 -1   46271		2  0  0  1   32573		0  0  2  1   17198		2  0  1 -1    9266		0  0  2 -1    8822		2 -1  0 -1    8216		2  0 -2 -1    4324		2  0  1  1    4200		2  1  0 -1   -3359		2 -1 -1  1    2463		2 -1  0  1    2211		2 -1 -1 -1    2065		0  1 -1 -1   -1870		4  0 -1 -1    1828		0  1  0  1   -1794		0  0  0  3   -1749		0  1 -1  1   -1565		1  0  0  1   -1491		0  1  1  1   -1475		0  1  1 -1   -1410		0  1  0 -1   -1344		1  0  0 -1   -1335		0  0  3  1    1107		4  0  0 -1    1021		4  0 -1  1     833		0  0  1 -3     777		4  0 -2  1     671		2  0  0 -3     607		2  0  2 -1     596		2 -1  1 -1     491		2  0 -2  1    -451		0  0  3 -1     439		2  0  2  1     422		2  0 -3 -1     421		2  1 -1  1    -366		2  1  0  1    -351		4  0  0  1     331		2 -1  1  1     315		2 -2  0 -1     302		0  0  1  3    -283		2  1  1 -1    -229		1  1  0 -1     223		1  1  0  1     223		0  1 -2 -1    -220		2  1 -1 -1    -220		1  0  1  1    -185		2 -1 -2 -1     181		0  1  2  1    -177		4  0 -2 -1     176		4 -1 -1 -1     166		1  0  1 -1    -164		4  0  1 -1     132		1  0 -1 -1    -119		4 -1  0 -1     115		2 -2  0  1     107		];	MOONlong(:,5)=MOONlong(:,5)/180e6*pi;	MOONlong(:,6)=MOONlong(:,6)/1000;	MOONlat(:,5)=MOONlat(:,5)/180e6*pi;endif ~exist('calcD','var')||isempty(calcD)	calcD=nargout==2;endif ~exist('dmj','var')||isempty(dmj)	dmj=calcjd;endif size(dmj,1)>1	if min(size(dmj))>1		for i=1:size(dmj,1)			dmj(i)=calcjc(dmj(i,:));		end		dmj=dmj(:,1);	end	if calcD		D=zeros(2,3,length(dmj));		for i=1:length(dmj)			D(:,:,i)=calclunarc(dmj(i),calcD);		end	else		% why not changing calculations to work verctorized?		D=zeros(length(dmj),3);		for i=1:length(dmj)			D(i,:)=calclunarc(dmj(i),calcD);		end	end	if nargout<=1		longout=D;	else		longout=D(:,1);		lat=D(:,2);		D=D(:,3);	end	returnelseif length(dmj)~=1||dmj>100	T=calcjc(dmj);else	T=dmj;endLp=(218.3164477+(481267.88123421+(-0.0015786+(1/538841-T/65194000)*T)*T)*T)/180*pi;D=(297.8501921+(445267.1114034+(-0.0018819+(1/545868-T/113065000)*T)*T)*T)/180*pi;M=(357.5291092+(35999.0502909+(-0.0001536+T/24490000)*T)*T)/180*pi;Mp=(134.9633964+(477198.8675055+(0.0087414+(1/69699-T/14712000)*T)*T)*T)/180*pi;F=(93.2720950+(483202.0175233+(-0.0036539+(-1/3526000+T/863310000)*T)*T)*T)/180*pi;Lp=Lp-2*pi*floor(Lp/(2*pi));D=D-2*pi*floor(D/(2*pi));M=M-2*pi*floor(M/(2*pi));Mp=Mp-2*pi*floor(Mp/(2*pi));F=F-2*pi*floor(F/(2*pi));A1=(119.75+131.849*T)/180*pi;A2=( 53.09+479264.290*T)/180*pi;A3=(313.45+481266.484*T)/180*pi;t1=MOONlong(:,1:4)*[D;M;Mp;F];t2=MOONlat(:,1:4)*[D;M;Mp;F];E=1-(0.002516+0.0000074*T)*T;Ecor=E.^abs(MOONlong(:,2));Ebcor=E.^abs(MOONlat(:,2));st1=sin(t1);ct1=cos(t1);sSl=MOONlong(:,5)'*(st1.*Ecor);sSr=MOONlong(:,6)'*(ct1.*Ecor);	% !!!!!correctie moet hier niet uitgevoerd worden???sSb=MOONlat(:,5)'*(sin(t2).*Ebcor);sSl=sSl+(3958*sin(A1)+1962*sin(Lp-F)+318*sin(A2))/180e6*pi;sSb=sSb+(-2235*sin(Lp)+382*sin(A3)+175*(sin(A1-F)+sin(A1+F))+127*sin(Lp-Mp)-115*sin(Lp+Mp))/180e6*pi;long=Lp+sSl;long=long-floor(long/2/pi)*2*pi;lat=sSb;D=385000.56+sSr;if calcD	dLp=(481267.88123421+(-0.0015786*2+(3/538841-T*4/65194000)*T)*T)/180*pi;	dD=(445267.1114034+(-0.0018819*2+(3/545868-T*4/113065000)*T)*T)/180*pi;	dM=(35999.0502909+(-0.0001536*2+T*3/24490000)*T)/180*pi;	dMp=(477198.8675055+(0.0087414*2+(3/69699-T*3/14712000)*T)*T)/180*pi;	dF=(483202.0175233+(-0.0036539*2+(-3/3526000+T*4/863310000)*T)*T)/180*pi;	dA1=131.849/180*pi;	dA2=479264.290/180*pi;	dA3=481266.484/180*pi;	%dE=-0.002516-2*0.0000074*T;	% Correctie mogelijk niet nodig		% Deze berekeningen rekenen erop dat E een constante is!	dt1=MOONlong(:,1:4)*[dD;dM;dMp;dF];	dt2=MOONlat(:,1:4)*[dD;dM;dMp;dF];	sdSl=sum(MOONlong(:,5).*ct1.*Ecor.*dt1);	sdSr=-sum(MOONlong(:,6).*st1.*Ecor.*dt1);	sdSb=sum(MOONlat(:,5).*cos(t2).*Ebcor.*dt2);	sdSl=sdSl+(3958*cos(A1)*dA1+1962*cos(Lp-F)*(dLp-dF)+318*cos(A2)*dA2)/180e6*pi;	sdSb=sdSb+(-2235*cos(Lp)*dLp+382*cos(A3)*dA3+175*(cos(A1-F)*(dA1-dF)+cos(A1+F)*(dA1+dF))	...		+127*cos(Lp-Mp)*(dLp-dMp)-115*cos(Lp+Mp)*(dLp+dMp))/180e6*pi;	dlong=dLp+sdSl;	dlat=sdSb;	dD=sdSr;	dP=[dlong dlat dD];endif nargout==1	if calcD		longout=[long lat D;dP];	else		longout=[long lat D];	endelseif nargout	if calcD		if nargout==2			longout=[long lat D];			lat=dP;		else			longout=[long dP(1)];			lat=[lat dP(2)];			D=[D dP(3)];		end	else		longout=long;	endelse	fprintf('%10.6f¡ (%8.5f rad)  %10.6f¡ (%8.5f rad)    - %8.3f km\n'	...		,long*180/pi,long,lat*180/pi,lat,D)	if calcD		fprintf('    d/dt : %15g %15g %15g\n'	...			,dP)	endend