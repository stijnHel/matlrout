function [L,B,R]=calcvsop87(D,T)% CALCVSOP87 - Berekent VSOP87-gegeven op tijdstip T%    [L,B,R]=calcvsop87(D,T)%         T : [d m j [hr min sec]]%             JM (JC/10)global VSOPdata VSOPplanenkelzoek=0;if ischar(T)	if strcmp(T,'zoek')		enkelzoek=1;	elseif strcmpi(T,'list')		if isempty(VSOPdata)			[~]=calcvsop87('aarde',calcjd);	% dummy calculation to fill in globals		end		L=VSOPplan(:,2);		return	else		% hier zou interpretatie van een datum kunnen komen		error('Verkeerd gebruik van calcvsop87')	endendif ischar(D)||enkelzoek	if isempty(VSOPdata)		planetenconv={			'EARTH','aarde';			'JUPITER','jupiter';			'MARS','mars';			'MERCURY','mercurius';			'NEPTUNE','neptunus';			'SATURN','saturnus';			'URANUS','uranus';			'VENUS','venus'};		VSOPdata=leesvsopcompleet;		VSOPplan=cell(length(VSOPdata),3);		for i=1:length(VSOPdata)			VSOPplan{i}=VSOPdata{i}(1).planeet;			j=find(strcmpi(VSOPplan{i},planetenconv(:,1)));			if isempty(j)				error('!!VSOPdata van ongekende planeet??')			end			VSOPplan{i,2}=planetenconv{j,2};			VSOPplan{i,3}=planetenconv{j,1};		end	end	i=strncmpi(D,VSOPplan(:,2),length(D));	if ~any(i)		i=strncmpi(D,VSOPplan(:,3),length(D));		if ~any(i)			if enkelzoek				L=[];				return			end			error('Kan planeet niet vinden tussen de VSOP87-data')		end	end	if sum(i)>1		printstr(VSOPplan(i,2))		error('Can''t choose!')	end	D=VSOPdata{i};	if enkelzoek		L=D;		return	endendif size(T,2)>1||all(T>100)	T=calcjc(T)/10;endL=zeros(length(T),3);for iT=1:length(T)	for i=1:length(D)		s=D(i).data(:,17)'*cos(D(i).data(:,18)+D(i).data(:,19)*T(iT));		L(iT,D(i).vnr)=L(iT,D(i).vnr)+s*T(iT)^D(i).power;	endendL(:,1)=L(:,1)-2*pi*floor(L(:,1)/2/pi);if nargout>1	R=L(:,3);	B=L(:,2);	L=L(:,1);end