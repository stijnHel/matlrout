function [eps,deps,eps0,dpsi]=calcobl(d,m,j,simple)% CALCOBL - Berekent "obliquity" en nutatie%   ref Astronomical Algorithms - J. Meeuws - chap. 22%%       [eps,deps,eps0,dpsi]=calcobl(d,m,j,simple)global NUTdataif isempty(NUTdata)	NUTdata=[	...		 0  0  0  0  1 -171996 -174.2 92025  8.9		-2  0  0  2  2  -13187   -1.6  5736 -3.1		 0  0  0  2  2   -2274   -0.2   977 -0.5		 0  0  0  0  2    2062    0.2  -895  0.5		 0  1  0  0  0    1426   -3.4    54 -0.1		 0  0  1  0  0     712    0.1    -7  0		-2  1  0  2  2    -517    1.2   224 -0.6		 0  0  0  2  1    -386   -0.4   200  0		 0  0  1  2  2    -301    0     129 -0.1		-2 -1  0  2  2     217   -0.5   -95  0.3		-2  0  1  0  0    -158    0       0  0		-2  0  0  2  1     129    0.1   -70  0		 0  0 -1  2  2     123    0     -53  0		 2  0  0  0  0      63    0       0  0		 0  0  1  0  1      63    0.1   -33  0		 2  0 -1  2  2     -59    0      26  0		 0  0 -1  0  1     -58   -0.1    32  0		 0  0  1  2  1     -51    0      27  0		-2  0  2  0  0      48    0       0  0		 0  0 -2  2  1      46    0     -24  0		 2  0  0  2  2     -38    0      16  0		 0  0  2  2  2     -31    0      13  0		 0  0  2  0  0      29    0       0  0		-2  0  1  2  2      29    0     -12  0		 0  0  0  2  0      26    0       0  0		-2  0  0  2  0     -22    0       0  0		 0  0 -1  2  1      21    0     -10  0		 0  2  0  0  0      17   -0.1     0  0		 2  0 -1  0  1      16    0      -8  0		-2  2  0  2  2     -16    0.1     7  0		 0  1  0  0  1     -15    0       9  0		-2  0  1  0  1     -13    0       7  0		 0 -1  0  0  1     -12    0       6  0		 0  0  2 -2  0      11    0       0  0		 2  0 -1  2  1     -10    0       5  0		 2  0  1  2  2      -8    0       3  0		 0  1  0  2  2       7    0      -3  0		-2  1  1  0  0      -7    0       0  0		 0 -1  0  2  2      -7    0       3  0		 2  0  0  2  1      -7    0       3  0		 2  0  1  0  0       6    0       0  0		-2  0  2  2  2       6    0      -3  0		-2  0  1  2  1       6    0      -3  0		 2  0 -2  0  1      -6    0       3  0		 2  0  0  0  1      -6    0       3  0		 0 -1  1  0  0       5    0       0  0		-2 -1  0  2  1      -5    0       3  0		-2  0  0  0  1      -5    0       3  0		 0  0  2  2  1      -5    0       3  0		-2  0  2  0  1       4    0       0  0		-2  1  0  2  1       4    0       0  0		 0  0  1 -2  0       4    0       0  0		-1  0  1  0  0      -4    0       0  0		-2  1  0  0  0      -4    0       0  0		 1  0  0  0  0      -4    0       0  0		 0  0  1  2  0       3    0       0  0		 0  0 -2  2  2      -3    0       0  0		-1 -1  1  0  0      -3    0       0  0		 0  1  1  0  0      -3    0       0  0		 0 -1  1  2  2      -3    0       0  0		 2 -1 -1  2  2      -3    0       0  0		 0  0  3  2  2      -3    0       0  0		 2 -1  0  2  2      -3    0       0  0		];	NUTdata(:,6:9)=NUTdata(:,6:9)*(pi/10000/180/3600);endif nargin==0	T=calcjd;elseif nargin==1||isempty(d)	T=d;elseif nargin==2	if length(d)==1		T=d;	else		T=calcjc(d);	end	simple=m;else	if isscalar(d)&&isscalar(m)&&isscalar(j)		T=calcjc(d,m,j);	else		N=[length(d) length(m) length(j)];		T=zeros(max(N),1);		for i=1:length(T)			if i<=N(1)				d_i=d(i);			end			if i<=N(2)				m_i=m(i);			end			if i<=N(3)				j_i=j(i);			end			T(i)=calcjc(d_i,m_i,j_i);		end	endendif any(T>1e6)	T=calcjc(d);elseif any(T>1000)	warning('Bad date input?!')endif ~exist('simple','var')	simple=0;endOm=(125.04452+(-1934.136261+(0.0020708+T/450000).*T).*T)/180*pi;if simple	L=(280.4665+36000.7698*T)*pi/180;	Lp=(218.3165+481267.8813*T)/180*pi;	dpsi=(-17.2*sin(Om)-1.32*sin(2*L)-0.23*sin(2*Lp)+0.21*sin(2*Om))*pi/(180*3600);	deps=(9.2*cos(Om)+0.57*cos(2*L)+0.1*cos(2*Lp)-0.09*cos(2*Om))*pi/(180*3600);else	% not simple	D=(297.85036+(445267.111480+(-0.0019142+T/189474).*T).*T)/180*pi;	M=(357.52772+(35999.050340-(0.0001603+T/300000).*T).*T)/180*pi;	Mp=(134.96298+(477198.867398+(0.0086972+T/56250).*T).*T)/180*pi;	F=(93.27191+(483202.017538+(-0.0036825+T/327270).*T).*T)/180*pi;	t1=NUTdata(:,1:5)*[D';M';Mp';F';Om'];	dpsi=Om;	deps=Om;	for iT=1:length(T)		dpsi(iT)=(NUTdata(:,6)+NUTdata(:,7)*T(iT))'*sin(t1(:,iT));		deps(iT)=(NUTdata(:,8)+NUTdata(:,9)*T(iT))'*cos(t1(:,iT));	endendeps0=0.4090928042223-(0.0002269655248+(0.0000000028604-0.0000000087897*T).*T).*T;eps=eps0+deps;